rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t()
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)  %>%mutate(parameter = substr(".2.5%", "", parameter))
model[j] <-m
}
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
model[j] <-m
}
keeps_creds%>%unlist
do.call(keeps_creds, rbind)
do.call(rbind,keeps_creds)
do.call(rbind,keeps_creds) %>% mutate(
model = rep(model, each = length(names))
)
do.call(rbind,keeps_creds) %>% mutate(
model = rep(model[1:3], each = length(names))
)
model[1:3]
dim(do.call(rbind,keeps_creds))
length(rep(model[1:3], each = length(names)))
names
length(names)
39/3
do.call(rbind,keeps_creds) %>% mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])))
do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " V2, ")"))
do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")"))
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1)
keeps_ci
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary
keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3)
keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t()
head(o.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) )
head(keeps_ci)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) %>% spread(model, c9)
library(tidyr)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) %>% spread(model, c9)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) %>% spread(model, ci)
keeps_ci
do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)
keeps_ci
keeps_summary
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(V1 = MALD, V2 = IND, V3 = MVN, V4 = LD)
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =Va, IND = V2 , MVN = V3, LD = V4)
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
keeps_summary
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
head(keeps_ci)
head(keeps_summary)
cbind(keeps_ci, keeps_summary[,c(1:4)])
r(keeps_ci, keeps_summary[,c(1:4)])
rbind(keeps_ci, keeps_summary[,c(1:4)])
rbind(keeps_ci, keeps_summary[,c(1:4)]) %>%
arrange(parameter)
do.call(rbind,keeps_creds)
docreds
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
model[j] <-m
}
do.call(rbind,keeps_creds)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
dim(do.call(rbind,keeps_creds) )
length(rep(model[1:3], each = length(names[c(4,6:17)]))
)
length(names[c(4,6:17)])
names
dim(keeps_creds)
length(keeps_creds)
dim(keeps_creds[[1]])
length(names)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names)),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
rbind(keeps_ci, keeps_summary[,c(1:4)]) %>%
arrange(parameter)
rbind(keeps_summary[,c(1:4)],keeps_ci) %>%
arrange(parameter)
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN", "LD")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
model[j] <-m
}
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model, each = length(names)),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
rbind(keeps_summary[,c(1:4)],keeps_ci) %>%
arrange(parameter)
keeps_ci
rbind(keeps_summary[,c(1:5)],keeps_ci) %>%
arrange(parameter)
keeps_summary
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4) %>% rbind(keeps_ci) %>%
arrange(parameter)
keeps_summary
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex")
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", row.names=FALSE)
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", include_rownames=FALSE)
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", include.rownames=FALSE)
head( keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4) )
head(rbind(keeps_ci))
rm(list = ls())
library(ald)
library(ggplot2)
library(grid)
library(gridExtra)
library(dplyr)
library(truncnorm)
library(mvtnorm)
library(tmvtnorm)
library(Rcpp)
library(MCMCpack)
library(quantmod)
library(RcppTN)
library(xtable)
library(tibble)#rownames_to_column()
library(tidyr)
domean<- function(x, total){
R <- total
if(length(dim(x)) == 2){ #if it's a data frame
return(apply(x[1:R,], 2, median))
}else if (length(dim(x)) > 2){
return(apply(x[1:R,,], 2:3, function(x){(median(x))}))
}else{
return(median(x[1:R]))
}
}
docreds <- function(x, total,q){
R <- total
if(length(dim(x)) == 2){ #if it's a data frame
return(apply(x[1:R,], 2, quantile, q))
#}#else if (length(dim(x)) > 2){
#return(apply(x[1:R,,], 2:3, function(x){(median(x))}))
}else{
return(quantile(x[1:R],q))
}
}
############################################################
#----LONG TIME SERIES ONLY---------------------------------
############################################################
getSymbols("BTC-USD",from = "2014-09-15",to = "2020-09-30")
BTC <- as.data.frame(`BTC-USD`)
BTC$Date <- seq(as.Date("2014-09-17"),as.Date("2020-09-30"),by="days")
BTC$`BTC-USD.Close`[BTC$Date=="2020-04-17"] <- 7096.18
getSymbols("^GSPC",from = "2014-09-15",to = "2020-09-30")
SP500 <- as.data.frame(`GSPC`)
SP500$Date <- as.Date(rownames(SP500))
S <- merge(BTC,SP500)
T <- nrow(S) - 1
Date <- S$Date
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 1
m = MALD
m =
"MALD"
m
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
library(reshape2)
rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%t()%>%
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%t()
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist%>%t
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%melt
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%
merge(temp, by.x = "L1", by.y = "parameter" )
temp <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%
merge(temp, by.x = "L1", by.y = "parameter" )
str( lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt())
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%rownames_to_column(var = "parameter")%>%
merge(temp,  by = "parameter" )
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%rownames_to_column(var = "parameter")%>%
merge(temp,  by = "parameter" ) %>%
mutate(parameter = paste0("$\\", parameter, "$"),
summary = paste0(value, ", (", V1, ", ", V2, ")"))
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%rownames_to_column(var = "parameter")%>%
merge(temp,  by = "parameter" ) %>%
mutate(parameter = paste0("$\\", parameter, "$"),
summary = paste0(round(value,2), ", (", V1, ", ", V2, ")"))
lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%rownames_to_column(var = "parameter")%>%
merge(temp,  by = "parameter" ) %>%
mutate(parameter = paste0("$\\", parameter, "$"),
summary = paste0(round(value,2), ", (", V1, ", ", V2, ")")) %>%
dplyr::select(parameter, summary)
keeps_summary0 <- list()
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
j = 0
for (m in c("MALD", "IND", "MVN", "LD")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
temp <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
keeps_summary0[[j]] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%rownames_to_column(var = "parameter")%>%
merge(temp,  by = "parameter" ) %>%
mutate(parameter = paste0("$\\", parameter, "$"),
summary = paste0(round(value,2), ", (", V1, ", ", V2, ")")) %>%
dplyr::select(parameter, summary)
model[j] <-m
}
keeps_summary0 <- list()
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
j = 0
for (m in c("MALD", "IND", "MVN", "LD")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
temp <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
keeps_summary0[[j]] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist %>%melt()%>%rownames_to_column(var = "parameter")%>%
merge(temp,  by = "parameter" ) %>%
mutate(parameter = paste0("$\\", parameter, "$"),
summary = paste0(round(value,2), ", (", V1, ", ", V2, ")"),
model = m) %>%
dplyr::select(model, parameter, summary)
model[j] <-m
}
keeps <- do.call(rbind,keeps_summary0) %>% spread(model, summary)
keeps
keeps <- do.call(rbind,keeps_summary0) %>% spread(model, summary) %>%
dplyr::select(parameter, IND, LD, MVN, MALD)
keeps
keeps_summary <- do.call(rbind,keeps_summary0) %>% spread(model, summary) %>%
dplyr::select(parameter, IND, LD, MVN, MALD)
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", include.rownames=FALSE)
