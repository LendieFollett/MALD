dplyr::select(-c(Var2))%>%
melt(id.vars = c("Date")) %>%
mutate(Jump_Type = factor(variable, levels = c("prop0", "prop1", "prop2", "prop3"),
labels = c("BTC only", "S&P only", "Both", "None"))) %>%
ggplot() +
geom_line(aes(x = Date, y = value, linetype = Jump_Type)) +
facet_wrap(~Jump_Type) +
theme_bw() +
labs(y = "Posterior Probability")+
theme(legend.position = "none")
keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date")
keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC))
keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC)) +
geom_line(aes(x = Date, y = value))
keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC)) +
geom_line(aes(x = Date, y = value^.5))
keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5))
keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw()
p1 <-   keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw()
head(S)
p1 <-   keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw()
p2 <- keeps_v2_long %>% subset(model == "MALD") %>%
merge(data.frame(SP=100*(log(S[-1,c( "GSPC.Close") ])-
log(S[-nrow(S),c( "GSPC.Closee") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = SP), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw()
p2 <- keeps_v2_long %>% subset(model == "MALD") %>%
merge(data.frame(SP=100*(log(S[-1,c( "GSPC.Close") ])-
log(S[-nrow(S),c( "GSPC.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = SP), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw()
grid.arrange(p1, p2, nrow = 2)
library(gridExtra)
grid.arrange(p1, p2, nrow = 2)
p1 <-   keeps_v1_long %>% subset(model == "MALD") %>%
merge(data.frame(BTC=100*(log(S[-1,c( "BTC-USD.Close") ])-
log(S[-nrow(S),c( "BTC-USD.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = BTC), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw() +labs(x = "")
p2 <- keeps_v2_long %>% subset(model == "MALD") %>%
merge(data.frame(SP=100*(log(S[-1,c( "GSPC.Close") ])-
log(S[-nrow(S),c( "GSPC.Close") ])),Date=Date[-1]) , by = "Date") %>%
ggplot() +
geom_line(aes(x = Date, y = SP), alpha= I(.5)) +
geom_line(aes(x = Date, y = value^.5)) +
theme_bw()
grid.arrange(p1, p2, nrow = 2)
ggsave("leverage.pdf",p3, height = 8, width = 10)
p3 <-grid.arrange(p1, p2, nrow = 2)
p3
ggsave("leverage.pdf",p3, height = 8, width = 10)
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","IND", ".rds"))
keeps$rho %>%
as.data.frame() %>%
melt() %>%
#mutate(variable = factor(variable, levels = c("V1", "V2"),labels = c("BTC", "S&P")))%>%
ggplot() +
geom_histogram(aes(x = value)) +
facet_grid(~variable) +
ggtitle("rho")
apply(keeps$rho, 2, function(x){mean(x >0)})
apply(keeps$rho, 2, quantile, .025, .095)
apply(keeps$rho, 2, quantile, c(.025, .095))
docreds<- function(x, total){
R <- total
if(length(dim(x)) == 2){ #if it's a data frame
return(apply(x[1:R,], 2, quantile, c(.025, .095)))
#}#else if (length(dim(x)) > 2){
#return(apply(x[1:R,,], 2:3, function(x){(median(x))}))
}else{
return(quantile(x[1:R],c(.025, .095)))
}
}
docreds<- function(x, total){
R <- total
if(length(dim(x)) == 2){ #if it's a data frame
return(apply(x[1:R,], 2, quantile, c(.025, .095)))
#}#else if (length(dim(x)) > 2){
#return(apply(x[1:R,,], 2:3, function(x){(median(x))}))
}else{
return(quantile(x[1:R],c(.025, .095)))
}
}
lapply(keeps[c(4,6:17)], docreds, total = 20000) %>%unlist
docreds<- function(x, total){
R <- total
if(length(dim(x)) == 2){ #if it's a data frame
return(apply(x[1:R,], 2, quantile, c(.025, .095)))
#}#else if (length(dim(x)) > 2){
#return(apply(x[1:R,,], 2:3, function(x){(median(x))}))
}else{
return(quantile(x[1:R],c(.025, .095)))
}
}
lapply(keeps[c(4,6:17)], docreds, total = 20000) %>%unlist
docreds<- function(x, total,q){
R <- total
if(length(dim(x)) == 2){ #if it's a data frame
return(apply(x[1:R,], 2, quantile, q))
#}#else if (length(dim(x)) > 2){
#return(apply(x[1:R,,], 2:3, function(x){(median(x))}))
}else{
return(quantile(x[1:R],q))
}
}
rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist)
t(rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist))
rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist) %>%
rownames_to_column(var = "parameter") %>%mutate_if(is.numeric, round, 3)
rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist) %>%
rownames_to_column(var = "parameter")%>% as.data.frame%>%mutate_if(is.numeric, round, 3)
rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist)%>% as.data.frame %>%
rownames_to_column(var = "parameter")%>%mutate_if(is.numeric, round, 3)
rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)
rbind(lapply(keeps[c(4,6:17)], docreds,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,.975, total = 20000) %>%unlist)
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t()
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")
rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)  %>%mutate(parameter = substr(".2.5%", "", parameter))
model[j] <-m
}
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], quantile,.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], quantile,.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 3)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
model[j] <-m
}
keeps_creds%>%unlist
do.call(keeps_creds, rbind)
do.call(rbind,keeps_creds)
do.call(rbind,keeps_creds) %>% mutate(
model = rep(model, each = length(names))
)
do.call(rbind,keeps_creds) %>% mutate(
model = rep(model[1:3], each = length(names))
)
model[1:3]
dim(do.call(rbind,keeps_creds))
length(rep(model[1:3], each = length(names)))
names
length(names)
39/3
do.call(rbind,keeps_creds) %>% mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])))
do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " V2, ")"))
do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")"))
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1)
keeps_ci
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary
keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3)
keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t()
head(o.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) )
head(keeps_ci)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) %>% spread(model, c9)
library(tidyr)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) %>% spread(model, c9)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1) %>% spread(model, ci)
keeps_ci
do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-V1)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)
keeps_ci
keeps_summary
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(V1 = MALD, V2 = IND, V3 = MVN, V4 = LD)
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =Va, IND = V2 , MVN = V3, LD = V4)
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
keeps_summary
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
head(keeps_ci)
head(keeps_summary)
cbind(keeps_ci, keeps_summary[,c(1:4)])
r(keeps_ci, keeps_summary[,c(1:4)])
rbind(keeps_ci, keeps_summary[,c(1:4)])
rbind(keeps_ci, keeps_summary[,c(1:4)]) %>%
arrange(parameter)
do.call(rbind,keeps_creds)
docreds
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
model[j] <-m
}
do.call(rbind,keeps_creds)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names[c(4,6:17)])),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
dim(do.call(rbind,keeps_creds) )
length(rep(model[1:3], each = length(names[c(4,6:17)]))
)
length(names[c(4,6:17)])
names
dim(keeps_creds)
length(keeps_creds)
dim(keeps_creds[[1]])
length(names)
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model[1:3], each = length(names)),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
rbind(keeps_ci, keeps_summary[,c(1:4)]) %>%
arrange(parameter)
rbind(keeps_summary[,c(1:4)],keeps_ci) %>%
arrange(parameter)
keeps <- readRDS(paste0("keeps_long/keepsBTCSP" ,"_","MALD", ".rds"))
names <- lapply(keeps[c(4,6:17)], domean, total = 10) %>%unlist %>%names
keeps_summary0 <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
model <- rep(NA, 4)
keeps_delta <- list()
keeps_creds <- list()
colnames(keeps_summary0) <- names
j = 0
for (m in c("MALD", "IND", "MVN", "LD")){# "SVMVN", "SVLD",
j = j + 1
keeps <- readRDS(paste0("keeps_long/keepsBTCSP_",m , ".rds"))
keeps_summary0[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_delta[[j]] <- keeps$delta %>%melt %>%group_by(Var2) %>%
summarise(prop0 = mean(value == 0),prop1 = mean(value == 1),prop2 = mean(value == 2),prop3 = mean(value == 3)) %>%
ungroup()
keeps_creds[[j]] <- rbind(lapply(keeps[c(4,6:17)], docreds,q=.025, total = 20000) %>%unlist,
lapply(keeps[c(4,6:17)], docreds,q=.975, total = 20000) %>%unlist)%>% t() %>%
as.data.frame %>%
rownames_to_column(var = "parameter")%>%
mutate_if(is.numeric, round, 2)  %>%mutate(parameter = gsub(".2.5%", "", parameter))
model[j] <-m
}
keeps_ci <- do.call(rbind,keeps_creds) %>%
mutate(model = rep(model, each = length(names)),
ci = paste0("(", V1,", " ,V2, ")")) %>%
dplyr::select(-c(V1, V2)) %>% spread(model, ci)%>%
mutate(parameter = paste0("$\\", parameter, "$"))
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4)
rbind(keeps_summary[,c(1:4)],keeps_ci) %>%
arrange(parameter)
keeps_ci
rbind(keeps_summary[,c(1:5)],keeps_ci) %>%
arrange(parameter)
keeps_summary
keeps_summary <- keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4) %>% rbind(keeps_ci) %>%
arrange(parameter)
keeps_summary
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex")
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", row.names=FALSE)
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", include_rownames=FALSE)
#TABLE XXX POSTERIOR MEANS OF PARAMETERS------
keeps_summary%>%
xtable() %>%
print(sanitize.text.function = function(x){x}, type = "latex", include.rownames=FALSE)
head( keeps_summary0 %>%as.data.frame()%>%
mutate_all(round, digits = 3) %>%
#mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
#dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
mutate(model = model) %>%t() %>% as.data.frame() %>%
rownames_to_column(var = "parameter") %>%
mutate(parameter = paste0("$\\", parameter, "$")) %>%
rename(MALD =V1, IND = V2 , MVN = V3, LD = V4) )
head(rbind(keeps_ci))
