rm(list = ls())  ## DON'T FORGET TO SET WD!!
library(ald)
library(ggplot2)
library(dplyr)
library(truncnorm)
library(mvtnorm)
library(tmvtnorm)
library(Rcpp)
library(MCMCpack)
library(quantmod)
library(RcppTN)
k <- 5 #thinning param
B <- 50000 #how many burn in draws to throw away
R <- 50000 #how many draws to keep after burn in
n_chns <- 1 #how many chains to run
BTC <- as.data.frame(`BTC-USD`)
BTC$Date <- seq(as.Date("2014-09-17"),as.Date("2020-09-30"),by="days")
BTC$`BTC-USD.Close`[BTC$Date=="2020-04-17"] <- 7096.18
getSymbols("^GSPC",from = "2014-09-15",to = "2020-09-30")
SP500 <- as.data.frame(`GSPC`)
#load data
getSymbols("BTC-USD",from = "2014-09-15",to = "2020-09-30")
SP500$Date <- as.Date(rownames(SP500))
S <- merge(BTC,SP500)
T <- nrow(S) - 1
keepsBTCSP_LD <- readRDS("/Users/000766412/Box Sync/ALD_Codes/keepsBTCSP_LD.rds")
rm(keepsBTCSP_LD)
# DATA AND MCMC SAMPLES ------------
#download full MCMC results (obtained from run_mcmc.R with fix = FALSE)
keepsBTCSP <- readRDS("/Users/000766412/Box Sync/ALD_Codes/keepsBTCSP.rds")
str(keepsBTCSP[c(2:16)])
ESS_checks <- lapply(keepsBTCSP[c(2:16)], doESS)
####################################################
# CONVERGENCE CHECKS ----------
####################################################
library(LaplacesDemon)
doESS <- function(x){
R <- sum(complete.cases(x))
if(!is.null(dim(x))){ #if it's a data frame
return(apply(x[1:R,], 2, ESS))
}else{
return(ESS(x[1:R]))
}
}
ESS_checks <- lapply(keepsBTCSP[c(2:16)], doESS)
ESS_checks <- lapply(keepsBTCSP[c(2:3,5:16)], doESS)
str(ESS_checks)
plot(keepsBTCSP$lambda[,1])
plot(keepsBTCSP$lambda[1:10000,1])
plot(keepsBTCSP$lambda[1:10000,2])
plot(keepsBTCSP$lambda[1:10000,3])
plot(keepsBTCSP$lambda[1:10000,4])
ESS(rnorm(1000))
ESS(keepsBTCSP$lambda[1:10000,4])
ESS_checks[1]
str(ESS_checks)
ESS_checks[2]
ESS(keepsBTCSP$lambda[1:10000,4])
ESS(keepsBTCSP$lambda[1:10000,1])
ESS(keepsBTCSP$sigma_c[1:10000,1])
ESS(keepsBTCSP$sigma_c[1:10000,2])
ESS(keepsBTCSP$xi_cw[1:10000,2])
ESS(keepsBTCSP$xi_cw[1:10000,1])
x = keepsBTCSP$lambda
R <- sum(complete.cases(x))
R
str(x)
summary(x)
total <- 10000 #number of mcmc iterations saved after burn-in, thinning
doESS <- function(x, total){
R <- total
if(!is.null(dim(x))){ #if it's a data frame
return(apply(x[1:R,], 2, ESS))
}else{
return(ESS(x[1:R]))
}
}
ESS_checks <- lapply(keepsBTCSP[c(2:3,5:16)], doESS)
ESS_checks <- lapply(keepsBTCSP[c(2:3,5:16)], doESS, total = total)
str(ESS_checks)
keepsBTCSP_MVN <- readRDS("/Users/000766412/Box Sync/ALD_Codes/keepsBTCSP_MVN.rds")
keepsBTCSP_LD <- readRDS("/Users/000766412/Box Sync/ALD_Codes/keepsBTCSP_LD.rds")
#SVMVN
lapply(keepsBTCSP_MVN[c(2:3,5:16)], doESS, total = total) %>% str()
#SVLD
lapply(keepsBTCSP_LD[c(2:3,5:16)], doESS, total = total) %>% str()
plot(keepsBTCSP$sigma_c[1:total, 1])
plot(keepsBTCSP$sigma_c[1:total, 1]);length(unique(keepsBTCSP$sigma_c[1:total, 1]))/total
plot(keepsBTCSP$rhoc[1:total])
plot(keepsBTCSP_MVN$rhoc[1:total])
plot(keepsBTCSP$xi_y2eta[1:total])
