keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,])
keeps_v1[j,]
keeps_v1[j,-(T+1)]
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(resids, plot = FALSE)
bacf
bacfdf <- with(bacf, data.frame(lag, acf))
bacfsf
bacfdf
if (i == "BTC"){
QQData <- 100*(log(S[-1,c("BTC-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("BTC-USD.Close","GSPC.Close")]))
} else if (i == "DOGE"){
QQData <- 100*(log(S[-1,c("DOGE-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("DOGE-USD.Close","GSPC.Close")]))
} else if (i == "AMC"){
QQData <- 100*(log(S[-1,c("AMC.Close","GSPC.Close")]) -
log(S[-nrow(S),c("AMC.Close","GSPC.Close")]))
} else if (i == "GME") {
QQData <- 100*(log(S[-1,c("GME.Close","GSPC.Close")]) -
log(S[-nrow(S),c("GME.Close","GSPC.Close")]))
} else {
QQData <- 100*(log(S[-1,c("MRNA.Close","GSPC.Close")]) -
log(S[-nrow(S),c("MRNA.Close","GSPC.Close")]))
}
j = 0
acf_dt <- NULL
keeps_medians <- array(dim = c(4, length(names)))
keeps_summary <- array(dim = c(4, length(names)))
keeps_creds_lower <- array(dim = c(4, length(names)))
keeps_creds_upper <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_j1 <- array(dim = c(4,dim(keeps$J)[2]))
keeps_j2 <- array(dim = c(4,dim(keeps$J)[2]))
model <- rep(NA, 4)
data <- rep(i, 4)
colnames(keeps_summary) <- names
for (m in c("SVIND", "SVLD", "SVMVN", "SVMALD")){
#for (m in "SVMALD"){
j = j + 1
keeps <- readRDS(paste0("keeps/keeps_",m ,"_",i, ".rds"))
keeps_medians[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_creds_lower[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.025, total = 20000) %>%unlist
keeps_creds_upper[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.975, total = 20000) %>%unlist
keeps_medians[j,] <- ifelse(grepl("phi",names),1-keeps_medians[j,],keeps_medians[j,])
tmp <- ifelse(grepl("phi",names),1-keeps_creds_upper[j,],keeps_creds_lower[j,])
keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(resids, plot = FALSE)
bacfdf <- with(bacf, data.frame(lag, acf))
acf_dt <- rbind(acf_dt,bacfdf)
}
acf_dt
i = "GME"
if (i == "BTC"){
QQData <- 100*(log(S[-1,c("BTC-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("BTC-USD.Close","GSPC.Close")]))
} else if (i == "DOGE"){
QQData <- 100*(log(S[-1,c("DOGE-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("DOGE-USD.Close","GSPC.Close")]))
} else if (i == "AMC"){
QQData <- 100*(log(S[-1,c("AMC.Close","GSPC.Close")]) -
log(S[-nrow(S),c("AMC.Close","GSPC.Close")]))
} else if (i == "GME") {
QQData <- 100*(log(S[-1,c("GME.Close","GSPC.Close")]) -
log(S[-nrow(S),c("GME.Close","GSPC.Close")]))
} else {
QQData <- 100*(log(S[-1,c("MRNA.Close","GSPC.Close")]) -
log(S[-nrow(S),c("MRNA.Close","GSPC.Close")]))
}
j = 0
acf_dt <- NULL
keeps_medians <- array(dim = c(4, length(names)))
keeps_summary <- array(dim = c(4, length(names)))
keeps_creds_lower <- array(dim = c(4, length(names)))
keeps_creds_upper <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_j1 <- array(dim = c(4,dim(keeps$J)[2]))
keeps_j2 <- array(dim = c(4,dim(keeps$J)[2]))
model <- rep(NA, 4)
data <- rep(i, 4)
colnames(keeps_summary) <- names
for (m in c("SVIND", "SVLD", "SVMVN", "SVMALD")){
#for (m in "SVMALD"){
j = j + 1
keeps <- readRDS(paste0("keeps/keeps_",m ,"_",i, ".rds"))
keeps_medians[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_creds_lower[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.025, total = 20000) %>%unlist
keeps_creds_upper[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.975, total = 20000) %>%unlist
keeps_medians[j,] <- ifelse(grepl("phi",names),1-keeps_medians[j,],keeps_medians[j,])
tmp <- ifelse(grepl("phi",names),1-keeps_creds_upper[j,],keeps_creds_lower[j,])
keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(resids, plot = FALSE)
bacfdf <- with(bacf, data.frame(lag, acf))
acf_dt <- rbind(acf_dt,bacfdf)
}
acf_dt
if (i == "BTC"){
QQData <- 100*(log(S[-1,c("BTC-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("BTC-USD.Close","GSPC.Close")]))
} else if (i == "DOGE"){
QQData <- 100*(log(S[-1,c("DOGE-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("DOGE-USD.Close","GSPC.Close")]))
} else if (i == "AMC"){
QQData <- 100*(log(S[-1,c("AMC.Close","GSPC.Close")]) -
log(S[-nrow(S),c("AMC.Close","GSPC.Close")]))
} else if (i == "GME") {
QQData <- 100*(log(S[-1,c("GME.Close","GSPC.Close")]) -
log(S[-nrow(S),c("GME.Close","GSPC.Close")]))
} else {
QQData <- 100*(log(S[-1,c("MRNA.Close","GSPC.Close")]) -
log(S[-nrow(S),c("MRNA.Close","GSPC.Close")]))
}
j = 0
acf_dt <- NULL
keeps_medians <- array(dim = c(4, length(names)))
keeps_summary <- array(dim = c(4, length(names)))
keeps_creds_lower <- array(dim = c(4, length(names)))
keeps_creds_upper <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_j1 <- array(dim = c(4,dim(keeps$J)[2]))
keeps_j2 <- array(dim = c(4,dim(keeps$J)[2]))
model <- rep(NA, 4)
data <- rep(i, 4)
colnames(keeps_summary) <- names
for (m in c("SVIND", "SVLD", "SVMVN", "SVMALD")){
#for (m in "SVMALD"){
j = j + 1
keeps <- readRDS(paste0("keeps/keeps_",m ,"_",i, ".rds"))
keeps_medians[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_creds_lower[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.025, total = 20000) %>%unlist
keeps_creds_upper[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.975, total = 20000) %>%unlist
keeps_medians[j,] <- ifelse(grepl("phi",names),1-keeps_medians[j,],keeps_medians[j,])
tmp <- ifelse(grepl("phi",names),1-keeps_creds_upper[j,],keeps_creds_lower[j,])
keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(abs(resids), plot = FALSE)
bacfdf <- with(bacf, data.frame(lag, acf))
acf_dt <- rbind(acf_dt,bacfdf)
}
acf_dt
bacfdf$model <- m
bacfdf
if (i == "BTC"){
QQData <- 100*(log(S[-1,c("BTC-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("BTC-USD.Close","GSPC.Close")]))
} else if (i == "DOGE"){
QQData <- 100*(log(S[-1,c("DOGE-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("DOGE-USD.Close","GSPC.Close")]))
} else if (i == "AMC"){
QQData <- 100*(log(S[-1,c("AMC.Close","GSPC.Close")]) -
log(S[-nrow(S),c("AMC.Close","GSPC.Close")]))
} else if (i == "GME") {
QQData <- 100*(log(S[-1,c("GME.Close","GSPC.Close")]) -
log(S[-nrow(S),c("GME.Close","GSPC.Close")]))
} else {
QQData <- 100*(log(S[-1,c("MRNA.Close","GSPC.Close")]) -
log(S[-nrow(S),c("MRNA.Close","GSPC.Close")]))
}
j = 0
acf_dt <- NULL
keeps_medians <- array(dim = c(4, length(names)))
keeps_summary <- array(dim = c(4, length(names)))
keeps_creds_lower <- array(dim = c(4, length(names)))
keeps_creds_upper <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_j1 <- array(dim = c(4,dim(keeps$J)[2]))
keeps_j2 <- array(dim = c(4,dim(keeps$J)[2]))
model <- rep(NA, 4)
data <- rep(i, 4)
colnames(keeps_summary) <- names
for (m in c("SVIND", "SVLD", "SVMVN", "SVMALD")){
#for (m in "SVMALD"){
j = j + 1
keeps <- readRDS(paste0("keeps/keeps_",m ,"_",i, ".rds"))
keeps_medians[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_creds_lower[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.025, total = 20000) %>%unlist
keeps_creds_upper[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.975, total = 20000) %>%unlist
keeps_medians[j,] <- ifelse(grepl("phi",names),1-keeps_medians[j,],keeps_medians[j,])
tmp <- ifelse(grepl("phi",names),1-keeps_creds_upper[j,],keeps_creds_lower[j,])
keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(abs(resids), plot = FALSE)
bacfdf <- with(bacf, data.frame(lag, acf))
bacfdf$model <- m
acf_dt <- rbind(acf_dt,bacfdf)
}
ggplot(acf_dt,aes(x=lag,y=acf)) +
geom_bar() +
facet_wrap(model~.) +
theme_bw()
acf_dt
ggplot(acf_dt,aes(x=lag,y=acf)) +
geom_bar() +
facet_wrap(model~.,nrow=2) +
theme_bw()
ggplot(acf_dt,aes(x=lag,y=acf)) +
geom_bar(stat = "identity", position = "identity") +
facet_wrap(model~.,nrow=2) +
theme_bw()
acf_dt$model <- factor(acf_dt$model,
levels=c("SVIND","SVLD","SVMVN","SVMALD"),
labels=c("SV-IND","SV-LD","SV-MVN","SV-MALD"))
ggplot(acf_dt,aes(x=lag,y=acf)) +
geom_bar(stat = "identity", position = "identity") +
facet_wrap(model~.,nrow=2) +
theme_bw()
for (i in c("BTC", "DOGE", "GME","MRNA")){
if (i == "BTC"){
QQData <- 100*(log(S[-1,c("BTC-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("BTC-USD.Close","GSPC.Close")]))
} else if (i == "DOGE"){
QQData <- 100*(log(S[-1,c("DOGE-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("DOGE-USD.Close","GSPC.Close")]))
} else if (i == "AMC"){
QQData <- 100*(log(S[-1,c("AMC.Close","GSPC.Close")]) -
log(S[-nrow(S),c("AMC.Close","GSPC.Close")]))
} else if (i == "GME") {
QQData <- 100*(log(S[-1,c("GME.Close","GSPC.Close")]) -
log(S[-nrow(S),c("GME.Close","GSPC.Close")]))
} else {
QQData <- 100*(log(S[-1,c("MRNA.Close","GSPC.Close")]) -
log(S[-nrow(S),c("MRNA.Close","GSPC.Close")]))
}
j = 0
acf_dt <- NULL
keeps_medians <- array(dim = c(4, length(names)))
keeps_summary <- array(dim = c(4, length(names)))
keeps_creds_lower <- array(dim = c(4, length(names)))
keeps_creds_upper <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_j1 <- array(dim = c(4,dim(keeps$J)[2]))
keeps_j2 <- array(dim = c(4,dim(keeps$J)[2]))
model <- rep(NA, 4)
data <- rep(i, 4)
colnames(keeps_summary) <- names
for (m in c("SVIND", "SVLD", "SVMVN", "SVMALD")){
#for (m in "SVMALD"){
j = j + 1
keeps <- readRDS(paste0("keeps/keeps_",m ,"_",i, ".rds"))
keeps_medians[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_creds_lower[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.025, total = 20000) %>%unlist
keeps_creds_upper[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.975, total = 20000) %>%unlist
keeps_medians[j,] <- ifelse(grepl("phi",names),1-keeps_medians[j,],keeps_medians[j,])
tmp <- ifelse(grepl("phi",names),1-keeps_creds_upper[j,],keeps_creds_lower[j,])
keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(abs(resids), plot = FALSE)
bacfdf <- with(bacf, data.frame(lag, acf))
bacfdf$model <- m
acf_dt <- rbind(acf_dt,bacfdf)
}
acf_dt$model <- factor(acf_dt$model,
levels=c("SVIND","SVLD","SVMVN","SVMALD"),
labels=c("SV-IND","SV-LD","SV-MVN","SV-MALD"))
ggplot(acf_dt,aes(x=lag,y=acf)) +
geom_bar(stat = "identity", position = "identity") +
facet_wrap(model~.,nrow=2) +
theme_bw()
ggsave(paste0("Figures/ACF_", i, "_Short.pdf"),plot5, width = 12, height = 12)
# plot5 <- grid.arrange(QQ_SVIND, QQ_SVLD, QQ_SVMVN,QQ_SVMALD, nrow = 2)
# ggsave(paste0("Figures/QQ_Plots_Short_Time/QQ_", i, "_Short.pdf"),plot5, width = 12, height = 12)
# keeps_summary <- keeps_summary %>% as.data.frame()%>%
# mutate_all(round, digits = 2) %>%
# mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
# dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
#  mutate(model = model) %>%t()
#  TABLE XXX POSTERIOR MEANS OF PARAMETERS------
# keeps_summary%>%
# xtable() %>%
#  print()
#
#FIGURE XXX STOCHASTIC VOLATILITY--------
#ALTERNATIVE CURRENCY
keeps_v1_long <- keeps_v1 %>% as.data.frame()%>%
mutate(model = model,
series = data) %>%
melt(id.vars = c("model", "series")) %>%
mutate(Date = rep(Date,each=4)) #CHECK THIS STRUCTURE
#S&P
# keeps_v2_long <- keeps_v2 %>%as.data.frame()%>%
#   mutate(model = model,
#          series = data) %>%
#   melt(id.vars = c("model", "series")) %>%
#   mutate(Date = Date, #CHECK THIS STRUCTURE
#          series = "S&P")
# tempdat <- keeps_v1_long %>% subset(model == "SVMALD") %>%
# merge(data.frame(Date=Date[-(T+1)],Asset=QQData[,1]) , by = "Date")
# p <- ggplot() +
#          geom_line(aes(x = Date, y = Asset), alpha= I(.4), data = tempdat) +
#          geom_line(aes(x = Date, y = sqrt(252*value^.5)), data = tempdat) +
#          theme_bw() +labs(x = "",y=i) + theme(text = element_text(size = 20))
# assign(paste0("p",i),ggplotGrob(p))
# if (i == "GME"){
#   tempdat <- keeps_v2_long %>% subset(model == "SVMALD") %>%
#     merge(data.frame(Date=Date[-(T+1)],Asset=QQData[,2]) , by = "Date")
#
#   p <- ggplot() +
#            geom_line(aes(x = Date, y = Asset), alpha= I(.4), data = tempdat) +
#            geom_line(aes(x = Date, y = value^.5), data = tempdat) +
#            theme_bw() +labs(x = "",y="S&P 500")+ theme(text = element_text(size = 20))
#   pSP500 <- ggplotGrob(p)
# }
assign(paste0("keeps_",i,"_long"),keeps_v1_long)
}
prob_rho_1 <- NULL
prob_rho_2 <- NULL
p_vals <- NULL
for (i in c("BTC", "DOGE", "GME","MRNA")){
if (i == "BTC"){
QQData <- 100*(log(S[-1,c("BTC-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("BTC-USD.Close","GSPC.Close")]))
} else if (i == "DOGE"){
QQData <- 100*(log(S[-1,c("DOGE-USD.Close","GSPC.Close")]) -
log(S[-nrow(S),c("DOGE-USD.Close","GSPC.Close")]))
} else if (i == "AMC"){
QQData <- 100*(log(S[-1,c("AMC.Close","GSPC.Close")]) -
log(S[-nrow(S),c("AMC.Close","GSPC.Close")]))
} else if (i == "GME") {
QQData <- 100*(log(S[-1,c("GME.Close","GSPC.Close")]) -
log(S[-nrow(S),c("GME.Close","GSPC.Close")]))
} else {
QQData <- 100*(log(S[-1,c("MRNA.Close","GSPC.Close")]) -
log(S[-nrow(S),c("MRNA.Close","GSPC.Close")]))
}
j = 0
acf_dt <- NULL
keeps_medians <- array(dim = c(4, length(names)))
keeps_summary <- array(dim = c(4, length(names)))
keeps_creds_lower <- array(dim = c(4, length(names)))
keeps_creds_upper <- array(dim = c(4, length(names)))
keeps_v1 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_v2 <- array(dim = c(4,dim(keeps$v)[2]))
keeps_j1 <- array(dim = c(4,dim(keeps$J)[2]))
keeps_j2 <- array(dim = c(4,dim(keeps$J)[2]))
model <- rep(NA, 4)
data <- rep(i, 4)
colnames(keeps_summary) <- names
for (m in c("SVIND", "SVLD", "SVMVN", "SVMALD")){
#for (m in "SVMALD"){
j = j + 1
keeps <- readRDS(paste0("keeps/keeps_",m ,"_",i, ".rds"))
keeps_medians[j,] <- lapply(keeps[c(4,6:17)], domean, total = 20000) %>%unlist
keeps_creds_lower[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.025, total = 20000) %>%unlist
keeps_creds_upper[j,] <- lapply(keeps[c(4,6:17)], docreds, q=.975, total = 20000) %>%unlist
keeps_medians[j,] <- ifelse(grepl("phi",names),1-keeps_medians[j,],keeps_medians[j,])
tmp <- ifelse(grepl("phi",names),1-keeps_creds_upper[j,],keeps_creds_lower[j,])
keeps_creds_upper[j,] <- ifelse(grepl("phi",names),1-keeps_creds_lower[j,],keeps_creds_upper[j,])
keeps_creds_lower[j,] <- tmp
keeps_v1[j,] <- apply(keeps$v[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_v2[j,] <- apply(keeps$v[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
keeps_j1[j,] <- apply(keeps$J[1:20000,,1], 2, function(x){(mean(x))}) #alternative sv
keeps_j2[j,] <- apply(keeps$J[1:20000,,2], 2, function(x){(mean(x))}) #sp sv
model[j] <- m
keeps_summary[j,] <- paste0(round(as.numeric(keeps_medians[j,]),3)," (",
round(as.numeric(keeps_creds_lower[j,]),3),",",
round(as.numeric(keeps_creds_upper[j,]),3),")")
# plot <- get_qq_short(keeps,QQData,i,m)
# assign(paste0("QQ_",m),plot)
# p_vals <- c(p_vals,get_qq_short(keeps,QQData,i,m))
prob_rho_1 <- c(prob_rho_1,length(which(keeps$rho[,3] > 0))/20000)
prob_rho_2 <- c(prob_rho_2,length(which(keeps$rho[,4] > 0))/20000)
resids <- (QQData[,1] - mean(keeps$mu[1]) - keeps_j1[j,])/sqrt(keeps_v1[j,-(T+1)])
bacf <- acf(abs(resids), plot = FALSE)
bacfdf <- with(bacf, data.frame(lag, acf))
bacfdf$model <- m
acf_dt <- rbind(acf_dt,bacfdf)
}
acf_dt$model <- factor(acf_dt$model,
levels=c("SVIND","SVLD","SVMVN","SVMALD"),
labels=c("SV-IND","SV-LD","SV-MVN","SV-MALD"))
acf_plot <- ggplot(acf_dt,aes(x=lag,y=acf)) +
geom_bar(stat = "identity", position = "identity") +
facet_wrap(model~.,nrow=2) +
theme_bw()
ggsave(paste0("Figures/ACF_", i, "_Short.pdf"),acf_plot, width = 12, height = 12)
# plot5 <- grid.arrange(QQ_SVIND, QQ_SVLD, QQ_SVMVN,QQ_SVMALD, nrow = 2)
# ggsave(paste0("Figures/QQ_Plots_Short_Time/QQ_", i, "_Short.pdf"),plot5, width = 12, height = 12)
# keeps_summary <- keeps_summary %>% as.data.frame()%>%
# mutate_all(round, digits = 2) %>%
# mutate(lambda = paste0("(",lambda1,", ", lambda2,", ", lambda3,", ", lambda4,")"))%>%
# dplyr::select(-c(lambda1, lambda2, lambda3, lambda4)) %>%
#  mutate(model = model) %>%t()
#  TABLE XXX POSTERIOR MEANS OF PARAMETERS------
# keeps_summary%>%
# xtable() %>%
#  print()
#
#FIGURE XXX STOCHASTIC VOLATILITY--------
#ALTERNATIVE CURRENCY
keeps_v1_long <- keeps_v1 %>% as.data.frame()%>%
mutate(model = model,
series = data) %>%
melt(id.vars = c("model", "series")) %>%
mutate(Date = rep(Date,each=4)) #CHECK THIS STRUCTURE
#S&P
# keeps_v2_long <- keeps_v2 %>%as.data.frame()%>%
#   mutate(model = model,
#          series = data) %>%
#   melt(id.vars = c("model", "series")) %>%
#   mutate(Date = Date, #CHECK THIS STRUCTURE
#          series = "S&P")
# tempdat <- keeps_v1_long %>% subset(model == "SVMALD") %>%
# merge(data.frame(Date=Date[-(T+1)],Asset=QQData[,1]) , by = "Date")
# p <- ggplot() +
#          geom_line(aes(x = Date, y = Asset), alpha= I(.4), data = tempdat) +
#          geom_line(aes(x = Date, y = sqrt(252*value^.5)), data = tempdat) +
#          theme_bw() +labs(x = "",y=i) + theme(text = element_text(size = 20))
# assign(paste0("p",i),ggplotGrob(p))
# if (i == "GME"){
#   tempdat <- keeps_v2_long %>% subset(model == "SVMALD") %>%
#     merge(data.frame(Date=Date[-(T+1)],Asset=QQData[,2]) , by = "Date")
#
#   p <- ggplot() +
#            geom_line(aes(x = Date, y = Asset), alpha= I(.4), data = tempdat) +
#            geom_line(aes(x = Date, y = value^.5), data = tempdat) +
#            theme_bw() +labs(x = "",y="S&P 500")+ theme(text = element_text(size = 20))
#   pSP500 <- ggplotGrob(p)
# }
assign(paste0("keeps_",i,"_long"),keeps_v1_long)
}
